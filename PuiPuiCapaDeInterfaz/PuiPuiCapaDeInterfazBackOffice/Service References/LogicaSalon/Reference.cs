//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PuiPuiCapaDeInterfazBackOffice.LogicaSalon {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogicaSalon.FachadaSalonBackOfficeSoap")]
    public interface FachadaSalonBackOfficeSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioConsultarSalonesTodos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServicioConsultarSalonesTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioConsultarSalonesTodos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ServicioConsultarSalonesTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioAgregarSalon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ServicioAgregarSalon(string codigo, string ubicacion, int status, int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioAgregarSalon", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ServicioAgregarSalonAsync(string codigo, string ubicacion, int status, int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioInactivarSalon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServicioInactivarSalon(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioInactivarSalon", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ServicioInactivarSalonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioModificarSalon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ServicioModificarSalon(int id, string codigo, string ubicacion, int status, int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioModificarSalon", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ServicioModificarSalonAsync(int id, string codigo, string ubicacion, int status, int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoUbicacionSalones", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServicioComandoUbicacionSalones(string ubicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoUbicacionSalones", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ServicioComandoUbicacionSalonesAsync(string ubicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoBusquedaCapacidadMayorSalon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServicioComandoBusquedaCapacidadMayorSalon(int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoBusquedaCapacidadMayorSalon", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ServicioComandoBusquedaCapacidadMayorSalonAsync(int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoBusquedaCapacidadMenorSalon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServicioComandoBusquedaCapacidadMenorSalon(int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoBusquedaCapacidadMenorSalon", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ServicioComandoBusquedaCapacidadMenorSalonAsync(int capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoBusquedaStatusSalon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ServicioComandoBusquedaStatusSalon(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ServicioComandoBusquedaStatusSalon", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ServicioComandoBusquedaStatusSalonAsync(int status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FachadaSalonBackOfficeSoapChannel : PuiPuiCapaDeInterfazBackOffice.LogicaSalon.FachadaSalonBackOfficeSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FachadaSalonBackOfficeSoapClient : System.ServiceModel.ClientBase<PuiPuiCapaDeInterfazBackOffice.LogicaSalon.FachadaSalonBackOfficeSoap>, PuiPuiCapaDeInterfazBackOffice.LogicaSalon.FachadaSalonBackOfficeSoap {
        
        public FachadaSalonBackOfficeSoapClient() {
        }
        
        public FachadaSalonBackOfficeSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FachadaSalonBackOfficeSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FachadaSalonBackOfficeSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FachadaSalonBackOfficeSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ServicioConsultarSalonesTodos() {
            return base.Channel.ServicioConsultarSalonesTodos();
        }
        
        public System.Threading.Tasks.Task<string> ServicioConsultarSalonesTodosAsync() {
            return base.Channel.ServicioConsultarSalonesTodosAsync();
        }
        
        public int ServicioAgregarSalon(string codigo, string ubicacion, int status, int capacidad) {
            return base.Channel.ServicioAgregarSalon(codigo, ubicacion, status, capacidad);
        }
        
        public System.Threading.Tasks.Task<int> ServicioAgregarSalonAsync(string codigo, string ubicacion, int status, int capacidad) {
            return base.Channel.ServicioAgregarSalonAsync(codigo, ubicacion, status, capacidad);
        }
        
        public bool ServicioInactivarSalon(int id) {
            return base.Channel.ServicioInactivarSalon(id);
        }
        
        public System.Threading.Tasks.Task<bool> ServicioInactivarSalonAsync(int id) {
            return base.Channel.ServicioInactivarSalonAsync(id);
        }
        
        public bool ServicioModificarSalon(int id, string codigo, string ubicacion, int status, int capacidad) {
            return base.Channel.ServicioModificarSalon(id, codigo, ubicacion, status, capacidad);
        }
        
        public System.Threading.Tasks.Task<bool> ServicioModificarSalonAsync(int id, string codigo, string ubicacion, int status, int capacidad) {
            return base.Channel.ServicioModificarSalonAsync(id, codigo, ubicacion, status, capacidad);
        }
        
        public string ServicioComandoUbicacionSalones(string ubicacion) {
            return base.Channel.ServicioComandoUbicacionSalones(ubicacion);
        }
        
        public System.Threading.Tasks.Task<string> ServicioComandoUbicacionSalonesAsync(string ubicacion) {
            return base.Channel.ServicioComandoUbicacionSalonesAsync(ubicacion);
        }
        
        public string ServicioComandoBusquedaCapacidadMayorSalon(int capacidad) {
            return base.Channel.ServicioComandoBusquedaCapacidadMayorSalon(capacidad);
        }
        
        public System.Threading.Tasks.Task<string> ServicioComandoBusquedaCapacidadMayorSalonAsync(int capacidad) {
            return base.Channel.ServicioComandoBusquedaCapacidadMayorSalonAsync(capacidad);
        }
        
        public string ServicioComandoBusquedaCapacidadMenorSalon(int capacidad) {
            return base.Channel.ServicioComandoBusquedaCapacidadMenorSalon(capacidad);
        }
        
        public System.Threading.Tasks.Task<string> ServicioComandoBusquedaCapacidadMenorSalonAsync(int capacidad) {
            return base.Channel.ServicioComandoBusquedaCapacidadMenorSalonAsync(capacidad);
        }
        
        public string ServicioComandoBusquedaStatusSalon(int status) {
            return base.Channel.ServicioComandoBusquedaStatusSalon(status);
        }
        
        public System.Threading.Tasks.Task<string> ServicioComandoBusquedaStatusSalonAsync(int status) {
            return base.Channel.ServicioComandoBusquedaStatusSalonAsync(status);
        }
    }
}
